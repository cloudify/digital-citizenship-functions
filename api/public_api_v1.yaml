swagger: '2.0'
info:
  version: 0.0.2
  title: Digital Citizenship API
  description: Digital Citizenship API.
basePath: "/api/v1"
schemes:
- https
security:
- SubscriptionKey: []
paths:
  "/services/{service_id}":
    parameters:
    - name: service_id
      in: path
      type: string
      required: true
      description: The ID of an existing Service.
    get:
      operationId: getService
      summary: Get Service
      description: A previously created service with the provided service ID is returned.
      responses:
        '200':
          description: Service found.
          schema:
            "$ref": "#/definitions/ServicePublic"
          examples:
            application/json:
              department_name: dept
              organization_name: org
              service_id: 2b3e728c1a5d1efa035c
              service_name: service
              version: 1
        '404':
          description: No service found for the provided ID.
      parameters: []
  "/messages/{fiscal_code}/{id}":
    parameters:
    - $ref: "#/parameters/FiscalCode"
    - name: id
      in: path
      type: string
      required: true
      description: The ID of the message.
    get:
      operationId: getMessage
      summary: Get Message
      description: The previously created message with the provided message ID is
        returned.
      responses:
        '200':
          description: Message found.
          schema:
            $ref: "#/definitions/MessageResponseWithContent"
          examples:
            application/json:
              message:
                id: 01BX9NSMKAAAS5PSP2FATZM6BQ
                fiscal_code: QXJNTX9RCRVD6V4O
                time_to_live: 3600
                content:
                  subject: message subject, aliquip sint nulla in estinut
                  markdown: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas et mollis felis.
                    Vivamus orci nisl, commodo ut sodales ut, eleifend a libero. Donec dapibus, turpis in mattis tempor,
                    risus nunc malesuada ex, non aliquet metus nunc a lacus. Aenean in arcu vitae nisl porta
                    fermentum nec non nibh. Phasellus tortor tellus, semper in metus eget, eleifend
                    laoreet nibh. Aenean feugiat lectus ut nisl eleifend gravida.
                sender_service_id: 01BX9NSMKVXXS5PSP2FATZM6QX
              notification:
                email: QUEUED
        '404':
          description: No message found for the provided ID.
          schema:
            $ref: "#/definitions/ProblemJson"
  "/messages/{fiscal_code}":
    parameters:
    - $ref: "#/parameters/FiscalCode"
    get:
      operationId: getMessagesByUser
      summary: Get messages by user
      description: |-
        Returns the messages for the user identified by the provided fiscal code.
        Messages will be returned in inverse acceptance order (from last to first).
        The "next" field, when present, contains an URL pointing to the next page of results.
      responses:
        '200':
          description: Found.
          schema:
            allOf:
            - type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: "#/definitions/CreatedMessageWithoutContent"
            - $ref: "#/definitions/PaginationResponse"
          examples:
            application/json:
              items:
              - id: 01BX9NSMKVXXS5PSP2FATZMYYY
                fiscal_code: PUPFHK4TD3MWL20W
                time_to_live: 3600
                content:
                  subject: amet sunt dolor nulla esseesseanim
                  markdown: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas et mollis felis.
                    Vivamus orci nisl, commodo ut sodales ut, eleifend a libero. Donec dapibus, turpis in mattis tempor,
                    risus nunc malesuada ex, non aliquet metus nunc a lacus. Aenean in arcu vitae nisl porta
                    fermentum nec non nibh. Phasellus tortor tellus, semper in metus eget, eleifend
                    laoreet nibh. Aenean feugiat lectus ut nisl eleifend gravida.
                sender_service_id: 01BX9NSMKVXXS5PSP2FATZMZZZ
              - id: 01BX9NSMKVXXS5PSP2FATZM123
                fiscal_code: PKTINH4QDQUV696L
                time_to_live: 3600
                content:
                  subject: idUt quis tempor esseesseanim
                  markdown: Nullam dapibus metus sed elementum efficitur. Curabitur facilisis sagittis risus nec sodales.
                    Vestibulum in eros sapien. Donec ac odio sit amet dui semper ornare eget nec odio. Pellentesque habitant
                    morbi tristique senectus et netus et malesuada fames ac turpis egestas. Praesent nibh ex, mattis sit amet
                    felis id, sodales euismod velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit.
                sender_service_id: 01BX9NSMKVXXS5PSP2FATZMWWW
              page_size: 2
              next: https://example.com/next
        '404':
          description: No message found.
          schema:
            $ref: "#/definitions/ProblemJson"
      parameters:
      - $ref: "#/parameters/PaginationRequest"
    post:
      operationId: submitMessageforUser
      summary: Submit a message
      description: |-
        Submits a message to a user.
        On error, the reason is returned in the response payload.
      parameters:
      - name: message
        in: body
        schema:
          $ref: "#/definitions/NewMessage"
        x-examples:
          application/json:
            time_to_live: 3600
            content:
              subject: ipsum labore deserunt fugiat
              markdown: Nullam dapibus metus sed elementum efficitur. Curabitur facilisis sagittis risus nec sodales.
                Vestibulum in eros sapien. Donec ac odio sit amet dui semper ornare eget nec odio. Pellentesque habitant
                morbi tristique senectus et netus et malesuada fames ac turpis egestas. Praesent nibh ex, mattis sit amet
                felis id, sodales euismod velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit.
      responses:
        '201':
          description: Message created.
          headers:
            Location:
              type: string
              description: |-
                Location (URL) of created message resource.
                A GET request to this URL returns the message status and details.
          examples:
            application/json:
              id: 01BX9NSMKVXXS5PSP2FATZMYYY
        '400':
          description: Invalid payload.
          schema:
            $ref: "#/definitions/ProblemJson"
          examples: {}
        '500':
          description: The message cannot be delivered.
          schema:
            $ref: "#/definitions/ProblemJson"
  "/profiles/{fiscal_code}":
    get:
      operationId: getProfile
      summary: Get User's Preferences
      description: Returns the preferences for the user identified by the provided
        fiscal code.
      responses:
        '200':
          description: Found.
          schema:
            allOf:
            - $ref: "#/definitions/LimitedProfile"
            - $ref: "#/definitions/ExtendedProfile"
          examples:
            application/json:
              email: foobar@example.com
              version: 1
        '404':
          description: No user found for the provided fiscal code.
          schema:
            $ref: "#/definitions/ProblemJson"
    parameters:
    - $ref: "#/parameters/FiscalCode"
    post:
      responses:
        '200':
          description: Profile updated.
          schema:
            allOf:
            - $ref: "#/definitions/LimitedProfile"
            - $ref: "#/definitions/ExtendedProfile"
          examples:
            application/json:
              email: foobar@example.com
              version: 0
        '400':
          description: Invalid payload.
          schema:
            $ref: "#/definitions/ProblemJson"
        '500':
          description: Profile cannot be updated.
          schema:
            $ref: "#/definitions/ProblemJson"
      description: Create or update the preferences for the user identified by the
        provided fiscal code.
      operationId: upsertProfile
      summary: Set User's Preferences
      parameters:
      - in: body
        name: body
        schema:
          $ref: "#/definitions/ExtendedProfile"
        x-examples:
          application/json:
            email: foobar@example.com
  "/info":
    get:
      operationId: getInfo
      responses:
        '200':
          description: Returns success if the API-Key is right.
          schema:
            type: object
            properties: {}
        '401':
          description: Returns unauthorized when the API-key if empty or wrong.
      description: An endpoint to test authenticated access to the API backend.
      summary: API test endpoint
definitions:
  $ref: definitions.yaml
responses: {}
parameters:
  PaginationRequest:
    $ref: 'https://raw.githubusercontent.com/ioggstream/openapi-samples/master/openapi-v2/schema/components.yaml#/x-components/parameters/cursor'
  FiscalCode:
    name: fiscal_code
    in: path
    type: string
    maxLength: 16
    minLength: 16
    required: true
    description: The fiscal code of the user, all upper case.
    pattern: "[A-Z]{6}[0-9LMNPQRSTUV]{2}[ABCDEHLMPRST][0-9LMNPQRSTUV]{2}[A-Z][0-9LMNPQRSTUV]{3}[A-Z]"
    x-example: SPNDNL80R13C555X
consumes:
- application/json
produces:
- application/json
securityDefinitions:
  SubscriptionKey:
    type: apiKey
    name: Ocp-Apim-Subscription-Key
    in: header
    description: The API key obtained through the developer portal.
