swagger: '2.0'
info:
  version: 0.0.1
  title: Digital Citizenship API
  description: Digital Citizenship API.
host: localhost
basePath: /api/v1
schemes:
  - https
paths:
  '/messages/{id}':
    parameters:
      - name: id
        in: path
        type: string
        required: true
        description: The ID of the message.
    get:
      operationId: getMessage
      summary: Get Message
      description: The previously created message with the provided message ID is returned.
      responses:
        '200':
          description: Message found.
          schema:
            $ref: '#/definitions/MessageResponse'
          examples: {}
        '404':
          description: No message found for the provided ID.
  '/users/{fiscal_code}/messages':
    parameters:
      - $ref: '#/parameters/PaginationRequest'
      - name: fiscal_code
        in: path
        type: string
        required: true
        description: 'The fiscal code of the user, all upper case.'
        maxLength: 16
        minLength: 16
        pattern: '[A-Z]{6}[0-9LMNPQRSTUV]{2}[ABCDEHLMPRST][0-9LMNPQRSTUV]{2}[A-Z][0-9LMNPQRSTUV]{3}[A-Z]'
    get:
      operationId: getMessagesByUser
      summary: Get messages by user
      description: |-
        Returns the messages for the user identified by the provided fiscal code.
        Messages will be returned in inverse acceptance order (from last to first).
        The "next" field, when present, contains an URL pointing to the next page of results.
      responses:
        '200':
          description: Found.
          schema:
            allOf:
              - type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/definitions/CreatedMessage'
              - $ref: '#/definitions/PaginationResponse'
        '404':
          description: No message found.
      parameters: []
    post:
      operationId: submitMessageforUser
      summary: Submit a message
      description: |-
        Submits a message to a user.
        On error, the reason is returned in the response payload. This is useful with the 'dry_run' option to check for the validity a the messages before sending it.
      parameters:
        - name: message
          in: body
          schema:
            $ref: '#/definitions/NewMessage'
      responses:
        '201':
          description: Message created.
          schema:
            $ref: '#/definitions/CreatedMessageResponse'
          headers:
            Location:
              type: string
              description: |-
                Location (URL) of created message resource.
                A GET request to this URL returns the message status and details.
        '400':
          description: Invalid payload.
          schema:
            $ref: '#/definitions/ProblemJson'
          examples: {}
        '500':
          description: The message cannot be delivered.
          schema:
            $ref: '#/definitions/ProblemJson'
  '/profiles/{fiscal_code}':
    get:
      operationId: getProfile
      summary: Get User's Preferences
      description: Returns the preferences for the user identified by the provided fiscal code.
      responses:
        '200':
          description: Found.
          schema:
            oneOf:
              - $ref: '#/definitions/LimitedProfile'
              - $ref: '#/definitions/ExtendedProfile'
          examples: {}
        '404':
          description: No user found for the provided fiscal code.
    parameters:
      - name: fiscal_code
        in: path
        type: string
        required: true
        pattern: '[A-Z]{6}[0-9LMNPQRSTUV]{2}[ABCDEHLMPRST][0-9LMNPQRSTUV]{2}[A-Z][0-9LMNPQRSTUV]{3}[A-Z]'
        maxLength: 16
        minLength: 16
        description: 'User''s fiscal code, all upper case.'
definitions:
  ProblemJson:
    title: Problem Type
    type: object
    properties:
      type:
        type: string
        format: uri
        description: |
          An absolute URI that identifies the problem type. When dereferenced,
          it SHOULD provide human-readable documentation for the problem type
          (e.g., using HTML).
        default: 'about:blank'
        example: 'https://example.com/problem/constraint-violation'
      title:
        type: string
        description: |
          A short, summary of the problem type. Written in english and readable
          for engineers (usually not suited for non technical stakeholders and
          not localized); example: Service Unavailable
      status:
        $ref: '#/definitions/HttpStatusCode'
      detail:
        type: string
        description: |
          A human readable explanation specific to this occurrence of the
          problem.
        example: Connection to database timed out
      instance:
        type: string
        format: uri
        description: |-
          An absolute URI that identifies the specific occurrence of the problem.
          It may or may not yield further information if dereferenced.
  MessageContent:
    title: MessageContent
    type: object
    properties:
      body_short:
        $ref: '#/definitions/BodyShort'
      body_long:
        $ref: '#/definitions/BodyLong'
    required:
      - body_short
  NewMessage:
    title: NewMessage
    type: object
    properties:
      dry_run:
        type: boolean
        description: 'This parameter, when set to true, allows developers to test a request without actually sending a message. The submitted message won''t be delivered to the end user but only checked for validity: "400 BAD REQUEST" is returned with a payload that describes the error. If the message can be accepted for delivery then "200 OK" is returned. The default value is false.'
      time_to_live:
        $ref: '#/definitions/TimeToLive'
      content:
        $ref: '#/definitions/MessageContent'
      default_addresses:
        $ref: '#/definitions/NewMessageDefaultAddresses'
    required:
      - content
  NotificationChannelStatus:
    type: string
    x-extensible-enum:
      - QUEUED
      - SENT_TO_CHANNEL
  NotificationStatus:
    title: NotificationStatus
    type: object
    properties:
      email:
        $ref: '#/definitions/NotificationChannelStatus'
  CreatedMessage:
    title: CreatedMessage
    type: object
    properties:
      id:
        type: string
      fiscal_code:
        $ref: '#/definitions/FiscalCode'
      time_to_live:
        $ref: '#/definitions/TimeToLive'
      content:
        $ref: '#/definitions/MessageContent'
      sender_organization_id:
        type: string
    required:
      - fiscal_code
      - content
      - sender_organization_id
  CreatedMessageResponse:
    type: object
    properties:
      dry_run:
        type: boolean
    required:
      - dry_run
  MessageResponse:
    type: object
    properties:
      message:
        $ref: '#/definitions/CreatedMessage'
      notification:
        $ref: '#/definitions/NotificationStatus'
    required:
      - message
  FiscalCode:
    type: string
    description: User's fiscal code.
    pattern: '^[A-Z]{6}[0-9LMNPQRSTUV]{2}[ABCDEHLMPRST][0-9LMNPQRSTUV]{2}[A-Z][0-9LMNPQRSTUV]{3}[A-Z]$'
  BodyShort:
    type: string
    description: |-
      An abstract of the message, in plain text. The content of this field will be delivered to channels that support a limited amount of characters (e.g. SMS, mobile notifications, etc...).
      The caller should assume that only the content in "body_short" may be delivered so the value of this field MUST contain *all* the required information.
    minLength: 3
    maxLength: 100
  BodyLong:
    type: string
    description: 'A long version of the message, in plain text. The content of this field will be delivered to channels that don''t have any limit in terms of content size (e.g. email, etc...). The long version of the message is optional and should be provided only in cases when a longer message (compared to the short version provided in body_short) gives more information to the user. This field should not be a duplicate of body_short.'
    minLength: 100
    maxLength: 100000
  PaginationResponse:
    type: object
    title: pagination
    description: Pagination response parameters.
    properties:
      page_size:
        type: integer
        minimum: 1
        description: Number of items returned for each page.
      next:
        type: string
        description: 'Contains an URL to GET the next #<page_size> results in the retrieved collection of items.'
        format: uri
  LimitedProfile:
    title: A citizen's profile
    description: Describes the citizen's profile, mostly interesting for preferences attributes.
    type: object
    properties:
      preferred_languages:
        description: 'Indicates the User''s preferred written or spoken language. Generally used for selecting a localized User interface. Valid values are concatenation of the ISO 639-1 two letter language code, an underscore, and the ISO 3166-1 2 letter country code; e.g., ''en_US'' specifies the language English and country US.'
        $ref: "#/definitions/PreferredLanguages"
  ExtendedProfile:
    title: A citizen's profile
    description: Describes the citizen's profile, mostly interesting for preferences attributes.
    type: object
    properties:
      email:
        $ref: "#/definitions/EmailAddress"
      preferred_languages:
        description: 'Indicates the User''s preferred written or spoken language. Generally used for selecting a localized User interface. Valid values are concatenation of the ISO 639-1 two letter language code, an underscore, and the ISO 3166-1 2 letter country code; e.g., ''en_US'' specifies the language English and country US.'
        $ref: "#/definitions/PreferredLanguages"
      version:
        type: integer
  TimeToLive:
    type: integer
    minimum: 3600
    maximum: 31536000
    description: This parameter specifies for how long (in seconds) the system will try to deliver the message to the channels configured by the user.
  HttpStatusCode:
    type: integer
    format: int32
    description: |
      The HTTP status code generated by the origin server for this occurrence
      of the problem.
    minimum: 100
    maximum: 600
    exclusiveMaximum: true
    example: 503
  NewMessageDefaultAddresses:
    type: object
    description: 'Default addresses for notifying the recipient of the message.'
    properties:
      email:
        $ref: '#/definitions/EmailAddress'
        description: 'The recipient will be notified to this email address in case no email is set in the recipient profile.'
  EmailAddress:
    type: string
    format: email
  PreferredLanguage:
    type: string
    x-extensible-enum:
      - it_IT
      - en_GB
      - es_ES
      - de_DE
      - fr_FR
  PreferredLanguages:
    type: array
    items:
      $ref: '#/definitions/PreferredLanguage'
responses: {}
parameters:
  PaginationRequest:
    name: cursor
    in: query
    type: string
    minimum: 1
    description: An opaque identifier that points to the next item in the collection.
consumes:
  - application/json
produces:
  - application/json
