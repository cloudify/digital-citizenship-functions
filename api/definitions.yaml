ProblemJson:
  title: Problem Type
  type: object
  properties:
    type:
      type: string
      format: uri
      description: |
        An absolute URI that identifies the problem type. When dereferenced,
        it SHOULD provide human-readable documentation for the problem type
        (e.g., using HTML).
      default: about:blank
      example: https://example.com/problem/constraint-violation
    title:
      type: string
      description: |
        A short, summary of the problem type. Written in english and readable
        for engineers (usually not suited for non technical stakeholders and
        not localized); example: Service Unavailable
    status:
      $ref: "#/HttpStatusCode"
    detail:
      type: string
      description: |
        A human readable explanation specific to this occurrence of the
        problem.
      example: There was an error processing the request
    instance:
      type: string
      format: uri
      description: |-
        An absolute URI that identifies the specific occurrence of the problem.
        It may or may not yield further information if dereferenced.
MessageContent:
  title: MessageContent
  type: object
  properties:
    subject:
      $ref: "#/MessageSubject"
    markdown:
      $ref: "#/MessageBodyMarkdown"
  required:
  - markdown
NewMessage:
  title: NewMessage
  type: object
  properties:
    time_to_live:
      $ref: "#/TimeToLive"
    content:
      $ref: "#/MessageContent"
    default_addresses:
      $ref: "#/NewMessageDefaultAddresses"
  required:
  - content
MessageStatus:
  type: string
  x-extensible-enum:
  - ACCEPTED
  - FAILED
  - THROTTLED
NotificationChannelStatus:
  type: string
  x-extensible-enum:
  - EXPIRED
  - FAILED
  - QUEUED
  - SENT_TO_CHANNEL
  - THROTTLED
  example: SENT_TO_CHANNEL
NotificationStatus:
  title: NotificationStatus
  type: object
  properties:
    email:
      $ref: "#/NotificationChannelStatus"
CreatedMessage:
  title: CreatedMessage
  type: object
  properties:
    id:
      type: string
    fiscal_code:
      $ref: "#/FiscalCode"
    time_to_live:
      $ref: "#/TimeToLive"
    content:
      $ref: "#/MessageContent"
    sender_service_id:
      type: string
    status:
      $ref: "#/MessageStatus"
  required:
  - fiscal_code
  - sender_service_id
  - status
MessageResponse:
  type: object
  properties:
    message:
      $ref: "#/CreatedMessage"
    notification:
      $ref: "#/NotificationStatus"
  required:
  - message
FiscalCode:
  type: string
  description: User's fiscal code.
  pattern: "^[A-Z]{6}[0-9LMNPQRSTUV]{2}[ABCDEHLMPRST][0-9LMNPQRSTUV]{2}[A-Z][0-9LMNPQRSTUV]{3}[A-Z]$"
  example: SPNDNL80R13C555X
MessageSubject:
  type: string
  description: |-
    The (optional) subject of the message - note that only some notification
    channels support the display of a subject. When a subject is not provided,
    one gets generated from the client attributes.
  minLength: 10
  maxLength: 120
  example: Welcome new user !
MessageBodyMarkdown:
  type: string
  description: |-
    The full version of the message, in plain text or Markdown format. The
    content of this field will be delivered to channels that don't have any
    limit in terms of content size (e.g. email, etc...).
  minLength: 80
  maxLength: 10000
  example: |-
    # This is a markdown header

    to show how easily markdown can be converted to **HTML**

    Remember: this has to be a long text.
PaginationResponse:
  type: object
  title: pagination
  description: Pagination response parameters.
  properties:
    page_size:
      type: integer
      minimum: 1
      description: Number of items returned for each page.
      example: 2
    next:
      type: string
      description: 'Contains an URL to GET the next #<page_size> results in the
        retrieved collection of items.'
      format: uri
      example: https://example.com/?p=0XXX2
LimitedProfile:
  title: A citizen's profile
  description: Describes the citizen's profile, mostly interesting for preferences
    attributes.
  type: object
  properties:
    preferred_languages:
      $ref: "#/PreferredLanguages"
ExtendedProfile:
  title: A citizen's profile
  description: Describes the citizen's profile, mostly interesting for preferences
    attributes.
  type: object
  properties:
    email:
      $ref: "#/EmailAddress"
    preferred_languages:
      $ref: "#/PreferredLanguages"
    is_inbox_enabled:
      $ref: "#/IsInboxEnabled"
    version:
      type: integer
IsInboxEnabled:
  type: boolean
  default: false
  description: True if the recipient of a message wants to store its content
    for later retrieval.
TimeToLive:
  type: integer
  default: 3600
  minimum: 3600
  maximum: 31536000
  description: This parameter specifies for how long (in seconds) the system will
    try to deliver the message to the channels configured by the user.
  example: 3600
HttpStatusCode:
  type: integer
  format: int32
  description: |
    The HTTP status code generated by the origin server for this occurrence
    of the problem.
  minimum: 100
  maximum: 600
  exclusiveMaximum: true
  example: 200
NewMessageDefaultAddresses:
  type: object
  description: Default addresses for notifying the recipient of the message in case
    no address for the related channel is set in his profile.
  properties:
    email:
      $ref: "#/EmailAddress"
EmailAddress:
  type: string
  format: email
  example: foobar@example.com
PreferredLanguage:
  type: string
  x-extensible-enum:
  - it_IT
  - en_GB
  - es_ES
  - de_DE
  - fr_FR
  example: it_IT
PreferredLanguages:
  type: array
  items:
    $ref: "#/PreferredLanguage"
  description: Indicates the User's preferred written or spoken languages in order
    of preference. Generally used for selecting a localized User interface. Valid
    values are concatenation of the ISO 639-1 two letter language code, an underscore,
    and the ISO 3166-1 2 letter country code; e.g., 'en_US' specifies the language
    English and country US.
Service:
  title: Service
  description: A Service tied to an user's subscription.
  type: object
  properties:
    service_id:
      $ref: "#/ServiceId"
    service_name:
      $ref: "#/ServiceName"
    organization_name:
      $ref: "#/OrganizationName"
    department_name:
      $ref: "#/DepartmentName"
    authorized_cidrs:
      type: array
      items:
        "$ref": "#/CIDR"
    authorized_recipients:
      type: array
      items:
        $ref: "#/FiscalCode"
    version:
      type: integer
    id:
      type: string
  required:
  - service_id
  - service_name
  - organization_name
  - department_name
  - authorized_cidrs
  - authorized_recipients
ServiceId:
  type: string
  description: The ID of the Service. Equals the subscriptionId of a registered
    API user.
  minLength: 1
ServiceName:
  type: string
  description: The name of the service. Will be added to the content of sent
    messages.
  minLength: 1
OrganizationName:
  type: string
  description: The organizazione that runs the service. Will be added to the
    content of sent messages to identify the sender.
  minLength: 1
DepartmentName:
  type: string
  description: The departmenet inside the organization that runs the service.
    Will be added to the content of sent messages.
  minLength: 1
CIDR:
  type: string
  title: CIDR
  description: Describes a single IP or a range of IPs.
  pattern: "([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?"
