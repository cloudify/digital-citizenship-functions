/**
 * This file contains gulp (https://gulpjs.com/) tasks to run at build time.
 * See also npm tasks in package.json.
 */
const gulp = require("gulp");
const loadPLugins = require("gulp-load-plugins");
const mjml = require("mjml");
const path = require("path");

const plugin = loadPLugins();

const TYPESCRIPT_TEMPLATES_DIR = "lib/templates/html";
const MJML_TEMPLATES_DIR = "templates/mjml";

/**
 * Transform a mjml template to a Typescript function outputting HTML.
 * 
 * @param content the content of mjml template as string
 * @param options options object (see gulp-text-simple plugin https://www.npmjs.com/package/gulp-text-simple)
 */
const toMjml = (content, options) => {
  const name = path.basename(options.sourcePath);
  return [
    `// DO NOT EDIT THIS FILE`,
    `// this file was auto generated from '${name}'`,
    `export default function(`,
    `  title: string,`,
    `  headlineText: string,`,
    `  senderOrganizationName: string,`,
    `  senderServiceName: string,`,
    `  titleText: string,`,
    `  contentHtml: string,`,
    `  footerHtml: string`,
    `): string {`,
    `  return \``,
    `${mjml.mjml2html(content, { minify: true }).html}\`;`,
    `}`,
    ""
  ].join("\n");
};

/**
 * Generate Typescript template files from mjml (https://mjml.io/).
 */
gulp.task("generate:templates", () => {
  return gulp
    .src(`${MJML_TEMPLATES_DIR}/*.mjml`)
    .pipe(plugin.textSimple(toMjml)())
    .pipe(plugin.rename((filepath) => (filepath.extname = ".ts")))
    .pipe(gulp.dest(TYPESCRIPT_TEMPLATES_DIR));
});

gulp.task("default", ["generate:templates"]);
